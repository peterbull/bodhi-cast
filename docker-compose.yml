version: "3.1"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: frontend.dockerfile
      args:
        REACT_APP_BACKEND_HOST: ${REACT_APP_BACKEND_HOST}
        REACT_APP_BACKEND_PORT: ${REACT_APP_BACKEND_PORT}
    env_file:
      - .env
    volumes:
      - ./frontend/my-app:/usr/src/app
    ports:
      # - "3000:3000" # Development
      - "80:80" # Production
    command: nginx -g 'daemon off;'
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: backend.dockerfile
    env_file:
      - .env
    # Run with debug
    command: >
      sh -c "python -Xfrozen_modules=off -m debugpy --listen 0.0.0.0:5678 -m
      uvicorn app.main:app --reload --host 0.0.0.0 --port 8000 &
      watchmedo shell-command --patterns='*.py' --recursive --command='pytest' /usr/src/app"
    # Run without debug
    # command: sh -c "uvicorn app.main:app --host 0.0.0.0 --port 8000"
    volumes:
      - ./backend:/usr/src/app
    ports:
      - "8000:8000" # application port
      - "5678:5678" # debug port
    depends_on:
      - db
      - redis

  db:
    image: postgis/postgis
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_SERVER: ${POSTGRES_SERVER}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    command: ["postgres", "-c", "shared_preload_libraries=pg_stat_statements"]

  redis:
    image: redis
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"

  celery:
    build:
      context: ./backend
      dockerfile: backend.dockerfile
    env_file:
      - .env
    command: celery -A app.main.celery_app worker --loglevel=info
    volumes:
      - ./backend:/usr/src/app
    depends_on:
      - backend
      - redis

  celery-beat:
    build:
      context: ./backend
      dockerfile: backend.dockerfile
    env_file:
      - .env
    command: celery -A app.main.celery_app beat --loglevel=info
    volumes:
      - ./backend:/usr/src/app
    depends_on:
      - redis

volumes:
  db_data:
  redis_data:
